Index: configure
===================================================================
--- configure	(revision 39343)
+++ configure	(working copy)
@@ -31,6 +31,7 @@
 deprecated_options="         \
    enable_mathcore           \
    enable_cern               \
+   enable_editline           \
 "
 
 options="                    \
@@ -52,7 +53,6 @@
    enable_cintex             \
    enable_clarens            \
    enable_cling              \
-   enable_editline           \
    enable_dcache             \
    enable_exceptions         \
    enable_explicitlink       \
@@ -1337,7 +1337,6 @@
   chirp              Chirp filesystem support, requires cctools >= 3.2.2
   cintex             Build the libCintex Reflex interface library
   clarens            Clarens RPC support, optionally used by PROOF
-  editline           Color-enabled prompt, requires (n)curses library
   dcache             dCache support, requires libdcap from DESY
   exceptions         Turn on compiler exception handling capability
   explicitlink       Explicitly link with all dependent libraries
@@ -1410,8 +1409,6 @@
   chirp-incdir       Chirp support, location of chirp_reli.h
   chirp-libdir       Chirp support, location of libchirp_client
   cppunit            Cppunit testing, directory of the cppunit installation
-  curses-incdir      (n)Curses support for editline, location of (n)curses.h
-  curses-libdir      (n)Curses support for editline, location of lib(n)curses
   dcap-incdir        dCache support, location of dcap.h
   dcap-libdir        dCache support, location of libdcap
   dicttype           dictionary type: "cint" (default), "reflex", or "gccxml"
@@ -1711,8 +1708,6 @@
       --with-chirp-incdir=*)   chirpincdir=$optarg   ; enable_chirp="yes"   ;;
       --with-chirp-libdir=*)   chirplibdir=$optarg   ; enable_chirp="yes"   ;;
       --with-cppunit=*)        cppunit=$optarg       ;;
-      --with-curses-incdir=*)  cursesincdir=$optarg  ; enable_editline="yes"  ;;
-      --with-curses-libdir=*)  curseslibdir=$optarg  ; enable_editline="yes"  ;;
       --with-dcap-incdir=*)    dcapincdir=$optarg    ; enable_dcache="yes"  ;;
       --with-dcap-libdir=*)    dcaplibdir=$optarg    ; enable_dcache="yes"  ;;
       --with-dicttype=*)       dicttype=$optarg      ;;
@@ -2415,42 +2410,6 @@
 
 ######################################################################
 #
-### echo %%% nCurses or Curses Support - Third party libraries
-#
-# Check for libcurses / libncurses
-#
-if test ! "x$enable_editline" = "xno" ; then
-    lookforcurseslib="libncurses"
-    check_header "ncurses.h" "$cursesincdir" \
-        ${finkdir:+$finkdir/include} \
-        /usr/include/ncurses /usr/local/include/ncurses \
-        /usr/include /usr/local/include
-    cursesincdir=$found_dir
-    curseshdr=$found_hdr
-    if test "x$cursesincdir" = "x"; then
-        lookforcurseslib="libcurses"
-        check_header "curses.h" "$cursesincdir" \
-            ${finkdir:+$finkdir/include} \
-            /usr/include/curses /usr/local/include/curses \
-            /usr/include /usr/local/include
-        cursesincdir=$found_dir
-        curseshdr=$found_hdr
-    fi
-
-    check_library "$lookforcurseslib" "$enable_shared" "$curseslibdir" \
-        /usr/lib /usr/local/lib
-    curseslib=$found_lib
-    curseslibdir=$found_dir
-
-    if test "x$cursesincdir" = "x" || test "x$curseslib" = "x"; then
-        enable_editline="no"
-    fi
-fi
-check_explicit "$enable_editline" "$enable_editline_explicit" \
-     "Explicitly required editline dependencies not fulfilled"
-
-######################################################################
-#
 ### echo %%% OpenGL Support - Third party libraries
 #
 # (see mesa3d.org)
@@ -6088,12 +6047,6 @@
 if test -d cint/cint7 ; then
    rm -rf cint/cint7
 fi
-if test ! "x$enable_editline" = "xno" ; then
-   rm -f core/clib/src/Getline.o core/clib/src/Getline.d
-fi
-if test ! "x$enable_editline_explicit" = "x" ; then
-   rm -f core/rint/src/TRint.o core/rint/src/TRint.d
-fi
 if test ! "x$macosx106" = "x"; then
    rm -f bin/python64 bin/ruby64
 fi
@@ -6473,10 +6426,6 @@
     -e "s|@xrdlibdir@|$xrdlibdir|"              \
     -e "s|@xrdincdir@|$xrdincdir|"              \
     -e "s|@xrdversion@|$decver|"                \
-    -e "s|@cursesincdir@|$cursesincdir|"        \
-    -e "s|@curseshdr@|$curseshdr|"              \
-    -e "s|@curseslib@|$curseslib|"              \
-    -e "s|@curseslibdir@|$curseslibdir|"        \
     -e "s|@cfitsioincdir@|$cfitsioincdir|"      \
     -e "s|@cfitsiolib@|$cfitsiolib|"            \
     -e "s|@cfitsiolibdir@|$cfitsiolibdir|"      \
@@ -6516,7 +6465,6 @@
     -e "s|@buildafdsmgrd@|$enable_afdsmgrd|"    \
     -e "s|@afdsmgrdapmon@|$afdsmgrdapmon|"      \
     -e "s|@buildglite@|$enable_glite|"          \
-    -e "s|@buildeditline@|$enable_editline|"    \
     < Makefile.tmp > $MAKEOUT
 rm -f Makefile.tmp
 
Index: proof/proof/src/TProof.cxx
===================================================================
--- proof/proof/src/TProof.cxx	(revision 39343)
+++ proof/proof/src/TProof.cxx	(working copy)
@@ -107,7 +107,7 @@
 
    } else {
       // Real stop or request to switch to asynchronous?
-      char *a = 0;
+      const char *a = 0;
       if (fProof->GetRemoteProtocol() < 22) {
          a = Getline("\nSwith to asynchronous mode not supported remotely:"
                      "\nEnter S/s to stop, Q/q to quit, any other key to continue: ");
@@ -9395,7 +9395,7 @@
 
          // Ask if more is wanted
          if (!(np%10)) {
-            char *opt = Getline("More (y/n)? [y]");
+            const char *opt = Getline("More (y/n)? [y]");
             if (opt[0] == 'n')
                break;
          }
Index: proof/proofbench/src/TProofBench.cxx
===================================================================
--- proof/proofbench/src/TProofBench.cxx	(revision 39343)
+++ proof/proofbench/src/TProofBench.cxx	(working copy)
@@ -681,7 +681,7 @@
       if (isatty(0) != 0 && isatty(1) != 0) {
          Printf("Target dataset '%s' exists already:"
                                           " do you want to remove it first?", dsetdst);
-         char *a = Getline("[Y,n] ");
+         const char *a = Getline("[Y,n] ");
          Printf("a: %s", a);
          if (a[0] == 'Y' || a[0] == 'y' || a[0] == '\n') {
             Info("CopyDataSet", "removing dataset '%s' ...", dsetdst);
Index: proof/proofx/src/TXProofMgr.cxx
===================================================================
--- proof/proofx/src/TXProofMgr.cxx	(revision 39343)
+++ proof/proofx/src/TXProofMgr.cxx	(working copy)
@@ -1296,7 +1296,7 @@
 
       // If a different file with the same name exists already, ask what to do
       if (!same) {
-         char *a = Getline("Local file exists already: would you like to overwrite it? [N/y]");
+         const char *a = Getline("Local file exists already: would you like to overwrite it? [N/y]");
          if (a[0] == 'n' || a[0] == 'N' || a[0] == '\0') return 0;
       } else {
          return 0;
@@ -1510,7 +1510,7 @@
       if (!force) {
          // If a different file with the same name exists already, ask what to do
          if (!same) {
-            char *a = Getline("Remote file exists already: would you like to overwrite it? [N/y]");
+            const char *a = Getline("Remote file exists already: would you like to overwrite it? [N/y]");
             if (a[0] == 'n' || a[0] == 'N' || a[0] == '\0') return 0;
             force = kTRUE;
          } else {
Index: core/meta/src/TCint.cxx
===================================================================
--- core/meta/src/TCint.cxx	(revision 39347)
+++ core/meta/src/TCint.cxx	(working copy)
@@ -647,8 +647,8 @@
 }
 
 //______________________________________________________________________________
-void TCint::SetGetline(char*(*getlineFunc)(const char* prompt),
-		       void (*histaddFunc)(char* line))
+void TCint::SetGetline(const char*(*getlineFunc)(const char* prompt),
+                       void (*histaddFunc)(const char* line))
 {
    // Set a getline function to call when input is needed.
    G__SetGetlineFunc(getlineFunc, histaddFunc);
Index: core/meta/inc/TCint.h
===================================================================
--- core/meta/inc/TCint.h	(revision 39347)
+++ core/meta/inc/TCint.h	(working copy)
@@ -107,8 +107,8 @@
    Long_t  ProcessLineAsynch(const char *line, EErrorCode *error = 0);
    Long_t  ProcessLineSynch(const char *line, EErrorCode *error = 0);
    void    PrintIntro();
-   void    SetGetline(char*(*getlineFunc)(const char* prompt),
-		      void (*histaddFunc)(char* line));
+   void    SetGetline(const char*(*getlineFunc)(const char* prompt),
+                      void (*histaddFunc)(const char* line));
    void    Reset();
    void    ResetAll();
    void    ResetGlobals();
Index: core/meta/inc/TInterpreter.h
===================================================================
--- core/meta/inc/TInterpreter.h	(revision 39347)
+++ core/meta/inc/TInterpreter.h	(working copy)
@@ -83,8 +83,8 @@
    virtual Long_t   ProcessLine(const char *line, EErrorCode *error = 0) = 0;
    virtual Long_t   ProcessLineSynch(const char *line, EErrorCode *error = 0) = 0;
    virtual void     PrintIntro() = 0;
-   virtual void     SetGetline(char*(*getlineFunc)(const char* prompt),
-                               void (*histaddFunc)(char* line)) = 0;
+   virtual void     SetGetline(const char*(*getlineFunc)(const char* prompt),
+                               void (*histaddFunc)(const char* line)) = 0;
    virtual void     Reset() = 0;
    virtual void     ResetAll() = 0;
    virtual void     ResetGlobals() = 0;
Index: core/clib/inc/LinkDef.h
===================================================================
--- core/clib/inc/LinkDef.h	(revision 39347)
+++ core/clib/inc/LinkDef.h	(working copy)
@@ -11,12 +11,6 @@
 
 #ifdef __CINT__
 
-#pragma link C++ enum EGetLineMode;
-
-#pragma link C++ function Getline(char*);
-#pragma link C++ function Getlinem(EGetLineMode,char*);
-#pragma link C++ function Gl_histadd(char*);
-
 #pragma link C++ function strlcpy(char *, const char *, size_t);
 #pragma link C++ function strlcat(char *, const char *, size_t);
 #pragma link C++ function snprintf(char *, size_t, const char *, ...);
Index: core/clib/Module.mk
===================================================================
--- core/clib/Module.mk	(revision 39347)
+++ core/clib/Module.mk	(working copy)
@@ -19,12 +19,8 @@
 CLIBDH       := $(CLIBDS:.cxx=.h)
 
 CLIBH        := $(filter-out $(MODDIRI)/LinkDef%,$(wildcard $(MODDIRI)/*.h))
-CLIBHH       := $(CLIBDIRI)/strlcpy.h $(CLIBDIRI)/snprintf.h \
-                $(CLIBDIRI)/Getline.h
+CLIBHH       := $(CLIBDIRI)/strlcpy.h $(CLIBDIRI)/snprintf.h 
 CLIBS1       := $(wildcard $(MODDIRS)/*.c)
-ifeq ($(BUILDEDITLINE),yes)
-CLIBS1       := $(filter-out $(MODDIRS)/Getline.c,$(CLIBS1))
-endif
 CLIBS2       := $(filter-out $(MODDIRS)/G__%,$(wildcard $(MODDIRS)/*.cxx))
 
 CLIBO        := $(call stripsrc,$(CLIBS1:.c=.o) $(CLIBS2:.cxx=.o))
Index: core/base/src/TApplication.cxx
===================================================================
--- core/base/src/TApplication.cxx	(revision 39347)
+++ core/base/src/TApplication.cxx	(working copy)
@@ -1096,6 +1096,15 @@
 }
 
 //______________________________________________________________________________
+Int_t TApplication::TabCompletionHook(char* /*buf*/, int* /*pLoc*/, ostream& /*out*/)
+{
+   // What to do when tab is pressed. Re-implemented by TRint.
+   // See TTabCom::Hook() for meaning of return values.
+   return -1;
+}
+
+
+//______________________________________________________________________________
 void TApplication::Terminate(Int_t status)
 {
    // Terminate the application by call TSystem::Exit() unless application has
Index: core/base/inc/TApplication.h
===================================================================
--- core/base/inc/TApplication.h	(revision 39347)
+++ core/base/inc/TApplication.h	(working copy)
@@ -154,6 +154,7 @@
    virtual void    Terminate(Int_t status = 0);       //*SIGNAL*
    virtual void    KeyPressed(Int_t key);             //*SIGNAL*
    virtual void    ReturnPressed(char *text );        //*SIGNAL*
+   virtual Int_t   TabCompletionHook(char *buf, int *pLoc, ostream& out);
 
    static Long_t   ExecuteFile(const char *file, Int_t *error = 0, Bool_t keep = kFALSE);
    static TList   *GetApplications();
Index: core/rint/src/TRint.cxx
===================================================================
--- core/rint/src/TRint.cxx	(revision 39347)
+++ core/rint/src/TRint.cxx	(working copy)
@@ -40,11 +40,7 @@
 #include "TError.h"
 #include <stdlib.h>
 
-#ifdef R__BUILDEDITLINE
-#include "Getline_el.h"
-#else
 #include "Getline.h"
-#endif
 
 #ifdef R__UNIX
 #include <signal.h>
@@ -227,7 +223,6 @@
    Gl_histsize(hist_size, hist_save);
    Gl_histinit((char *)logon);
 
-#ifdef R__BUILDEDITLINE
    // black on white or white on black?
    static const char* defaultColorsBW[] = {
       "bold blue", "magenta", "bold green", "bold red underlined", "default"
@@ -247,7 +242,6 @@
    TString colorBadBracket = gEnv->GetValue("Rint.BadBracketColor", defaultColors[3]);
    TString colorPrompt = gEnv->GetValue("Rint.PromptColor", defaultColors[4]);
    Gl_setColors(colorType, colorTabCom, colorBracket, colorBadBracket, colorPrompt);
-#endif
 
    Gl_windowchanged();
 
@@ -520,7 +514,7 @@
    // Handle input coming from terminal.
 
    static TStopwatch timer;
-   char *line;
+   const char *line;
 
    if ((line = Getlinem(kOneChar, 0))) {
       if (line[0] == 0 && Gl_eof())
@@ -531,7 +525,6 @@
       Gl_histadd(line);
 
       TString sline = line;
-      line[0] = 0;
 
       // strip off '\n' and leading and trailing blanks
       sline = sline.Chop();
@@ -670,3 +663,14 @@
 
    return ret;
 }
+
+
+//______________________________________________________________________________
+Int_t TRint::TabCompletionHook(char *buf, int *pLoc, ostream& out)
+{
+   // Forward tab completion request to our TTabCom::Hook().
+   if (gTabCom)
+      return gTabCom->Hook(buf, pLoc, out);
+
+   return -1;
+}
Index: core/rint/src/TTabCom.cxx
===================================================================
--- core/rint/src/TTabCom.cxx	(revision 39347)
+++ core/rint/src/TTabCom.cxx	(working copy)
@@ -161,14 +161,6 @@
 //
 TTabCom *gTabCom = 0;
 
-
-extern "C" int gl_root_tab_hook(char *buf, int /*prompt_width */ ,
-                                int *pLoc)
-{
-   return gTabCom ? gTabCom->Hook(buf, pLoc) : -1;
-}
-
-
 // ----------------------------------------------------------------------------
 //
 //              constructors
@@ -194,8 +186,6 @@
    fLastIter = 0;
 
    InitPatterns();
-
-   Gl_tab_hook = gl_root_tab_hook;
 }
 
 //
@@ -1243,6 +1233,7 @@
 Int_t TTabCom::Complete(const TRegexp & re,
                         const TSeqCollection * pListOfCandidates,
                         const char appendage[],
+                        ostream& out,
                         TString::ECaseCompare cmp)
 {
    // [private]
@@ -1414,15 +1405,15 @@
             // (except for those excluded by "FileIgnore")
          {
             IfDebug(cerr << "printing ambiguous matches" << endl);
-            cout << endl;
+            out << endl;
             while ((pObj = next_match())) {
                s = pObj->GetName();
                s0 = next_fullpath()->GetName();
                if (!ExcludedByFignore(s) || nGoodStrings == 0) {
                   if (IsDirectory(s0))
-                     cout << s << "/" << endl;
+                     out << s << "/" << endl;
                   else
-                     cout << s << endl;
+                     out << s << endl;
                }
             }
             pos = -2;
@@ -1635,7 +1626,7 @@
 }
 
 //______________________________________________________________________________
-Int_t TTabCom::Hook(char *buf, int *pLoc)
+Int_t TTabCom::Hook(char *buf, int *pLoc, ostream& out)
 {
    // [private]
 
@@ -1670,14 +1661,14 @@
       {
          const TSeqCollection *pListOfUsers = GetListOfUsers();
 
-         pos = Complete("[^~]*$", pListOfUsers, "/");
+         pos = Complete("[^~]*$", pListOfUsers, "/", out);
       }
       break;
    case kSYS_EnvVar:
       {
          const TSeqCollection *pEnv = GetListOfEnvVars();
 
-         pos = Complete("[^$]*$", pEnv, "");
+         pos = Complete("[^$]*$", pEnv, "", out);
       }
       break;
 
@@ -1690,8 +1681,8 @@
          const TSeqCollection *pListOfFiles =
              GetListOfFilesInPath(filePath.Data());
 
-//             pos = Complete( "[^ /]*$", pListOfFiles, " " );
-         pos = Complete("[^ /]*$", pListOfFiles, "filename ");
+//             pos = Complete( "[^ /]*$", pListOfFiles, " ", out );
+         pos = Complete("[^ /]*$", pListOfFiles, "filename ", out);
       }
       break;
 
@@ -1706,14 +1697,14 @@
          const TSeqCollection *pListOfFiles =
              GetListOfFilesInPath(macroPath.Data());
 
-//             pos = Complete( "[^ /]*$", pListOfFiles, " " );
-         pos = Complete("[^ /]*$", pListOfFiles, "filename ");
+//             pos = Complete( "[^ /]*$", pListOfFiles, " ", out);
+         pos = Complete("[^ /]*$", pListOfFiles, "filename ", out);
       }
       break;
 
    case kCINT_pragma:
       {
-         pos = Complete("[^ ]*$", GetListOfPragmas(), "");
+         pos = Complete("[^ ]*$", GetListOfPragmas(), "", out);
       }
       break;
    case kCINT_includeSYS:
@@ -1723,14 +1714,14 @@
             TString includePath =
                 DeterminePath(fileName, GetSysIncludePath());
 
-//                  pos = Complete( "[^</]*$", GetListOfFilesInPath( includePath ), "> " );
+//                  pos = Complete( "[^</]*$", GetListOfFilesInPath( includePath ), "> ", out);
             pos =
                 Complete("[^</]*$", GetListOfFilesInPath(includePath),
-                         "filename> ");
+                         "filename> ", out);
          } else {
-//                  pos = Complete( "[^</]*$", GetListOfSysIncFiles(), "> " );
+//                  pos = Complete( "[^</]*$", GetListOfSysIncFiles(), "> ", out);
             pos =
-                Complete("[^</]*$", GetListOfSysIncFiles(), "filename> ");
+                Complete("[^</]*$", GetListOfSysIncFiles(), "filename> ", out);
          }
       }
       break;
@@ -1741,14 +1732,14 @@
          const TSeqCollection *pListOfFiles =
              GetListOfFilesInPath(includePath.Data());
 
-//             pos = Complete( "[^\"/]*$", pListOfFiles, "\" " );
-         pos = Complete("[^\"/]*$", pListOfFiles, "filename\" ");
+//             pos = Complete( "[^\"/]*$", pListOfFiles, "\" ", out);
+         pos = Complete("[^\"/]*$", pListOfFiles, "filename\" ", out);
       }
       break;
 
    case kCINT_cpp:
       {
-         pos = Complete("[^# ]*$", GetListOfCppDirectives(), " ");
+         pos = Complete("[^# ]*$", GetListOfCppDirectives(), " ", out);
       }
       break;
 
@@ -1759,8 +1750,8 @@
          const TString dynamicPath = DeterminePath(fileName,gEnv->GetValue("Root.DynamicPath",(char *) 0));
          const TSeqCollection *pListOfFiles = GetListOfFilesInPath(dynamicPath);
 
-//             pos = Complete( "[^\"/]*$", pListOfFiles, "\");" );
-         pos = Complete("[^\"/]*$", pListOfFiles, "filename\");");
+//             pos = Complete( "[^\"/]*$", pListOfFiles, "\");", out);
+         pos = Complete("[^\"/]*$", pListOfFiles, "filename\");", out);
       }
       break;
 
@@ -1770,7 +1761,7 @@
          const TString filePath = DeterminePath(fileName,".");
          const TSeqCollection *pListOfFiles = GetListOfFilesInPath(filePath.Data());
 
-         pos = Complete("[^\" /]*$", pListOfFiles, "filename\"");
+         pos = Complete("[^\" /]*$", pListOfFiles, "filename\"", out);
       }
       break;
 
@@ -1884,7 +1875,7 @@
                pList->AddAll(pClass->GetListOfAllPublicDataMembers());
             }
 
-            pos = Complete("[^: ]*$", pList, "");
+            pos = Complete("[^: ]*$", pList, "", out);
 
             delete pList;
             if (pClass)
@@ -1901,7 +1892,7 @@
             pList->AddAll(pClass->GetListOfAllPublicMethods());
             pList->AddAll(pClass->GetListOfAllPublicDataMembers());
 
-            pos = Complete("[^: ]*$", pList, "(");
+            pos = Complete("[^: ]*$", pList, "(", out);
 
             delete pList;
             delete pClass;
@@ -1956,16 +1947,16 @@
             {
                int* store_fpLoc = fpLoc;
                char* store_fBuf = fBuf;
-               pos = Complete("[^. ]*$", pList, "(");
+               pos = Complete("[^. ]*$", pList, "(", out);
                if (pos == -1) {
                   fpLoc = store_fpLoc;
                   fBuf = store_fBuf;
-                  pos = Complete("[^. ]*$", pList, "(", TString::kIgnoreCase);
+                  pos = Complete("[^. ]*$", pList, "(", out, TString::kIgnoreCase);
                }
                break;
             }
          case kCXX_IndirectMember:
-            pos = Complete("[^> ]*$", pList, "(");
+            pos = Complete("[^> ]*$", pList, "(", out);
             break;
          default:
             assert(0);
@@ -2048,19 +2039,19 @@
          while ((pMethod = (TMethod *) nextMethod())) {
             if (methodName == pMethod->GetName()) {
                foundOne = kTRUE;
-               cout << endl << pMethod->GetReturnTypeName()
+               out << endl << pMethod->GetReturnTypeName()
                    << " " << pMethod->GetName()
                    << pMethod->GetSignature();
                const char *comment = pMethod->GetCommentString();
                if (comment && comment[0] != '\0') {
-                  cout << " \t// " << comment;
+                  out << " \t// " << comment;
                }
             }
          }
 
          // done
          if (foundOne) {
-            cout << endl;
+            out << endl;
             pos = -2;
          } else {
             gSystem->Beep();
@@ -2149,19 +2140,19 @@
          while ((pMethod = (TMethod *) nextMethod())) {
             if (methodName == pMethod->GetName()) {
                foundOne = kTRUE;
-               cout << endl << pMethod->GetReturnTypeName()
+               out << endl << pMethod->GetReturnTypeName()
                    << " " << pMethod->GetName()
                    << pMethod->GetSignature();
                const char *comment = pMethod->GetCommentString();
                if (comment && comment[0] != '\0') {
-                  cout << " \t// " << comment;
+                  out << " \t// " << comment;
                }
             }
          }
 
          // done
          if (foundOne) {
-            cout << endl;
+            out << endl;
             pos = -2;
          } else {
             gSystem->Beep();
@@ -2208,7 +2199,7 @@
          const TSeqCollection *pC3 = GetListOfGlobalFunctions();
          if (pC3) pList->AddAll(pC3);
 
-         pos = Complete("[_a-zA-Z][_a-zA-Z0-9]*$", pList, "");
+         pos = Complete("[_a-zA-Z][_a-zA-Z0-9]*$", pList, "", out);
 
          delete pList;
       }
@@ -2233,11 +2224,11 @@
             cerr << endl << "no such function: " << dblquote(functionName)
                 << endl;
          } else {
-            cout << endl;
+            out << endl;
             TIter next(&listOfMatchingGlobalFuncs);
             TFunction *pFunction;
             while ((pFunction = (TFunction *) next())) {
-               cout << pFunction->GetReturnTypeName()
+               out << pFunction->GetReturnTypeName()
                    << " " << pFunction->GetName()
                    << pFunction->GetSignature()
                    << endl;
Index: core/rint/inc/TTabCom.h
===================================================================
--- core/rint/inc/TTabCom.h	(revision 39347)
+++ core/rint/inc/TTabCom.h	(working copy)
@@ -42,6 +42,9 @@
 #ifndef ROOT_TRegExp
 #include "TRegexp.h"
 #endif
+#ifndef ROOT_Riosfwd
+#include "Riosfwd.h"
+#endif
 
 
 #define MAX_LEN_PAT 1024               // maximum length of a pattern
@@ -65,7 +68,7 @@
    typedef TListIter TContIter;
 
 public: // member functions
-   Int_t Hook(char *buf, int *pLoc);
+   Int_t Hook(char *buf, int *pLoc, ostream& out);
 
    const TSeqCollection* GetListOfClasses();
    const TSeqCollection* GetListOfCppDirectives();
@@ -195,7 +198,8 @@
    TTabCom(const TTabCom &);           //private and not implemented
    TTabCom& operator=(const TTabCom&); //private and not implemented
 
-   Int_t      Complete( const TRegexp& re, const TSeqCollection* pListOfCandidates, const char appendage[], TString::ECaseCompare cmp = TString::kExact);
+   Int_t      Complete(const TRegexp& re, const TSeqCollection* pListOfCandidates,
+                       const char appendage[], ostream& out, TString::ECaseCompare cmp = TString::kExact);
    void       CopyMatch( char dest[], const char localName[], const char appendage[]=0, const char fullName[]=0 ) const;
    EContext_t DetermineContext() const;
    TString    DeterminePath( const TString& fileName, const char defaultPath[] ) const;
@@ -231,6 +235,6 @@
    ClassDef(TTabCom,0)  //Perform comand line completion when hitting <TAB>
 };
 
-extern TTabCom *gTabCom;
+R__EXTERN TTabCom *gTabCom;
 
 #endif
Index: core/rint/inc/TRint.h
===================================================================
--- core/rint/inc/TRint.h	(revision 39347)
+++ core/rint/inc/TRint.h	(working copy)
@@ -60,6 +60,7 @@
    virtual void        Run(Bool_t retrn = kFALSE);
    virtual void        Terminate(int status);
            void        Interrupt() { fInterrupt = kTRUE; }
+   virtual Int_t       TabCompletionHook(char *buf, int *pLoc, ostream& out);
 
    ClassDef(TRint,0);  //ROOT Interactive Application Interface
 };
Index: cint/cint/src/input.cxx
===================================================================
--- cint/cint/src/input.cxx	(revision 39343)
+++ cint/cint/src/input.cxx	(working copy)
@@ -198,7 +198,7 @@
 char *G__input(const char *prompt)
 {
   static char line[G__LONGLINE];
-  char *pchar;
+  const char *pchar;
 #ifdef G__GNUREADLINE
   static int state=0;
 #endif
Index: cint/cint/inc/Api.h
===================================================================
--- cint/cint/inc/Api.h	(revision 39343)
+++ cint/cint/inc/Api.h	(working copy)
@@ -279,8 +279,8 @@
 /*********************************************************************
 * External readline interface
 *********************************************************************/
-typedef char* (*G__pGetline_t)(const char* prompt);
-typedef void  (*G__pHistadd_t)(char* line);
+typedef const char* (*G__pGetline_t)(const char* prompt);
+typedef void  (*G__pHistadd_t)(const char* line);
 
 #ifndef __CINT__
 G__EXPORT
Index: Makefile
===================================================================
--- Makefile	(revision 39343)
+++ Makefile	(working copy)
@@ -260,9 +260,7 @@
 ifneq ($(ARCH),win32)
 MODULES      += net/rpdutils net/rootd proof/proofd proof/pq2 proof/proofbench
 endif
-ifeq ($(BUILDEDITLINE),yes)
-MODULES      += core/editline
-endif
+MODULES += core/textinput
 ifeq ($(BUILDTMVA),yes)
 MODULES      += tmva math/genetic
 endif
@@ -279,7 +277,7 @@
 -include MyModules.mk   # allow local modules
 
 ifneq ($(findstring $(MAKECMDGOALS),distclean maintainer-clean),)
-MODULES      += core/unix core/winnt core/editline graf2d/x11 graf2d/x11ttf \
+MODULES      += core/unix core/winnt graf2d/x11 graf2d/x11ttf \
                 graf3d/gl graf3d/ftgl graf3d/glew io/rfio io/castor \
                 montecarlo/pythia6 montecarlo/pythia8 misc/table \
                 sql/mysql sql/pgsql sql/sapdb net/srputils graf3d/x3d \
@@ -499,11 +497,11 @@
 ##### libCore #####
 
 COREL         = $(BASEL1) $(BASEL2) $(BASEL3) $(CONTL) $(METAL) \
-                $(SYSTEML) $(CLIBL) $(METAUTILSL) $(EDITLINEL)
+                $(SYSTEML) $(CLIBL) $(METAUTILSL) $(TEXTINPUTL)
 COREO         = $(BASEO) $(CONTO) $(METAO) $(SYSTEMO) $(ZIPO) $(CLIBO) \
-                $(METAUTILSO) $(EDITLINEO) $(CLINGO)
+                $(METAUTILSO) $(TEXTINPUTO) $(CLINGO)
 COREDO        = $(BASEDO) $(CONTDO) $(METADO) $(METACDO) $(SYSTEMDO) \
-                $(CLIBDO) $(METAUTILSDO) $(EDITLINEDO) $(CLINGDO)
+                $(CLIBDO) $(METAUTILSDO) $(TEXTINPUTDO) $(CLINGDO)
 
 CORELIB      := $(LPATH)/libCore.$(SOEXT)
 COREMAP      := $(CORELIB:.$(SOEXT)=.rootmap)
@@ -511,10 +509,6 @@
 CORELIBEXTRA += $(ZLIBLIBDIR) $(ZLIBCLILIB)
 STATICEXTRALIBS += $(ZLIBLIBDIR) $(ZLIBCLILIB)
 endif
-ifeq ($(BUILDEDITLINE),yes)
-CORELIBEXTRA += $(CURSESLIBDIR) $(CURSESLIB)
-STATICEXTRALIBS += $(CURSESLIBDIR) $(CURSESLIB)
-endif
 
 ##### In case shared libs need to resolve all symbols (e.g.: aix, win32) #####
 
Index: net/krb5auth/src/Krb5Auth.cxx
===================================================================
--- net/krb5auth/src/Krb5Auth.cxx	(revision 39343)
+++ net/krb5auth/src/Krb5Auth.cxx	(working copy)
@@ -718,10 +718,11 @@
    // Check if the user wants to be prompt about principal
    TString principal = TString(clientPrincipal);
    if (TAuthenticate::GetPromptUser() || promptPrinc) {
-      char *usr = Getline(Form("Principal (%s): ", principal.Data()));
+      const char *usr = Getline(Form("Principal (%s): ", principal.Data()));
       if (usr[0]) {
-         usr[strlen(usr) - 1] = 0; // get rid of \n
-         if (strlen(usr))
+        TString usrs(usr);
+         usrs[strlen(usr) - 1] = 0; // get rid of \n
+         if (usrs.Length())
             principal = usr;
       }
    }
Index: net/auth/src/TAuthenticate.cxx
===================================================================
--- net/auth/src/TAuthenticate.cxx	(revision 39343)
+++ net/auth/src/TAuthenticate.cxx	(working copy)
@@ -1351,8 +1351,9 @@
          return StrDup("None");
    }
 
-   char *usr = Getline(Form("Name (%s:%s): ", remote, user));
-   if (usr[0]) {
+   const char *usrIn = Getline(Form("Name (%s:%s): ", remote, user));
+   if (usrIn[0]) {
+      TString usr(usrIn);
       usr[strlen(usr) - 1] = 0; // get rid of \n
       if (strlen(usr))
          return StrDup(usr);
@@ -1378,7 +1379,7 @@
    }
 
    char buf[128];
-   char *pw = buf;
+   const char *pw = buf;
    // Get the plugin for the passwd dialog box, if needed
    if (!gROOT->IsBatch() && (fgPasswdDialog == (TPluginHandler *)(-1)) &&
        gEnv->GetValue("Auth.UsePasswdDialogBox", 1) == 1) {
@@ -1402,16 +1403,16 @@
 
    } else {
       Gl_config("noecho", 1);
-      pw = Getline((char *) prompt);
+      pw = Getline(prompt);
       Gl_config("noecho", 0);
    }
 
    // Final checks
    if (pw[0]) {
-      if (pw[strlen(pw)-1] == '\n')
-         pw[strlen(pw) - 1] = 0;   // get rid of \n
-      char *rpw = StrDup(pw);
-      memset(pw, 0, strlen(pw));
+      TString spw(pw);
+      if (spw[strlen(pw) - 1] == '\n')
+         spw[strlen(pw) - 1] = 0;   // get rid of \n
+      char *rpw = StrDup(spw);
       return rpw;
    }
    return 0;
Index: config/Makefile.in
===================================================================
--- config/Makefile.in	(revision 39343)
+++ config/Makefile.in	(working copy)
@@ -335,12 +335,6 @@
 BUILDAFDSMGRD  := @buildafdsmgrd@
 AFDSMGRDAPMON  := @afdsmgrdapmon@
 
-CURSESINCDIR   := $(filter-out -I/usr/include, -I@cursesincdir@)
-CURSESLIBDIR   := @curseslibdir@
-CURSESHDR      := @curseshdr@
-CURSESLIB      := @curseslib@
-BUILDEDITLINE  := @buildeditline@
-
 CPPUNIT        := @cppunit@
 GCCXML         := @gccxml@
 
Index: graf2d/win32gdk/src/TGWin32InterpreterProxy.cxx
===================================================================
--- graf2d/win32gdk/src/TGWin32InterpreterProxy.cxx	(revision 39348)
+++ graf2d/win32gdk/src/TGWin32InterpreterProxy.cxx	(working copy)
@@ -58,10 +58,10 @@
 RETURN_METHOD_ARG2(Interpreter,Long_t,ProcessLine,const char*,line,TInterpreter::EErrorCode*,error)
 RETURN_METHOD_ARG2(Interpreter,Long_t,ProcessLineSynch,const char*,line,TInterpreter::EErrorCode*,error)
 VOID_METHOD_ARG0(Interpreter,PrintIntro,1)
-typedef char* (*GetlineFunc_t)(const char* prompt);
-typedef void (*HistaddFunc_t)(char* line);
+typedef const char* (*GetlineFunc_t)(const char* prompt);
+typedef void (*HistaddFunc_t)(const char* line);
 VOID_METHOD_ARG2(Interpreter,SetGetline,GetlineFunc_t, getlineFunc,\
-		 HistaddFunc_t, histaddFunc, 1)
+                 HistaddFunc_t, histaddFunc, 1)
 VOID_METHOD_ARG0(Interpreter,Reset,1)
 VOID_METHOD_ARG0(Interpreter,ResetAll,1)
 VOID_METHOD_ARG0(Interpreter,ResetGlobals,1)
Index: graf2d/win32gdk/inc/TGWin32InterpreterProxy.h
===================================================================
--- graf2d/win32gdk/inc/TGWin32InterpreterProxy.h	(revision 39348)
+++ graf2d/win32gdk/inc/TGWin32InterpreterProxy.h	(working copy)
@@ -59,8 +59,8 @@
    Long_t   ProcessLine(const char *line, EErrorCode *error = 0);
    Long_t   ProcessLineSynch(const char *line, EErrorCode *error = 0);
    void     PrintIntro();
-   void     SetGetline(char*(*getlineFunc)(const char* prompt),
-		       void (*histaddFunc)(char* line));
+   void     SetGetline(const char*(*getlineFunc)(const char* prompt),
+                       void (*histaddFunc)(const char* line));
    void     Reset();
    void     ResetAll();
    void     ResetGlobals();
