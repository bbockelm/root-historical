/*****************************************************************************/
/*                                                                           */
/*                           XrdMonArgParser.icc                             */
/*                                                                           */
/* (c) 2005 by the Board of Trustees of the Leland Stanford, Jr., University */
/*                            All Rights Reserved                            */
/*       Produced by Jacek Becla for Stanford University under contract      */
/*              DE-AC02-76SF00515 with the Department of Energy              */
/*****************************************************************************/

// $Id$

#include "XrdMon/XrdMonErrors.hh"
#include "XrdMon/XrdMonException.hh"
#include "XrdMon/XrdMonArgParser.hh"

template <typename T, class C>
XrdMonArgParser::ArgImpl<T, C>::ArgImpl(const char* theSwitch,
                                              T defaultValue,
                                              bool required)
    : _value(defaultValue),
      _switch(theSwitch),
      _done(false),
      _required(required)
{}

template <typename T, class C>
int
XrdMonArgParser::ArgImpl<T, C>::parseArgs(int argc, 
                                          char* argv[], 
                                          int curArg)
{
    if ( _switch != argv[curArg] ) {
        return 0; // not my switch
    }
    if ( _done ) {
        string ss("Argument "); ss += _switch; ss += " was already set";
        throw XrdMonException(ERR_INVALIDARG, ss);
    }
    if ( argc-curArg < 2 ) {
        string ss("Expected argument after "); ss += _switch;
        throw XrdMonException(ERR_INVALIDARG, ss);
    }
    
    _value = C::convert(argv[curArg+1]);
    _done = true;
    
    return 2; // took care of two arguments
}

template <typename T, class C>
void
XrdMonArgParser::ArgImpl<T, C>::throwIfRequiredButNotSet()
{
    if ( _required && ! _done ) {
        string ss("Expected argument \"");
        ss += _switch; ss += " <value>\" not found";
        throw XrdMonException(ERR_INVALIDARG, ss);
    }
}

